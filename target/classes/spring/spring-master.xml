<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"  xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
		
    
    <!-- 系统参数信息 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:redis.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>
	
	
	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在Spring MVC 配置文件中只扫描@Controller注解 -->
	<!-- base-package 如果多个，用“,”分隔 -->
	<context:component-scan base-package="lykj">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
    <!-- Jedis 连接池配置-->  
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.maxTotal}"></property>  
        <property name="maxIdle" value="${redis.maxIdle}" />  <!-- 允许的闲置连接数 --> 
        <property name="maxWaitMillis" value="${redis.maxWait}" />  <!-- 最多等待时间 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" /> <!-- 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用 -->
    </bean>  
      
      
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
      <property  
        name="hostName"  
        value="${redis.ip}" />  
        <property  
        name="password"  
        value="${redis.password}" />   
    <property  
        name="port"  
        value="${redis.port}" />  
    <property  
        name="poolConfig"  
        ref="jedisPoolConfig" />
     </bean>
     <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory"   ref="jedisConnectionFactory" /> 
        <property name="keySerializer" ref="stringRedisSerializer" /> <!-- 使用StringSerializationRedisSerializer序列化key及value -->
        <property name="valueSerializer" ref="stringRedisSerializer" />
    </bean>
    	<!-- 导入模块配置文件 -->
	<import resource="spring-mybatis.xml" />
</beans>
